// Generated by CoffeeScript 2.7.0
(function() {
  // vim: set expandtab tabstop=2 shiftwidth=2 softtabstop=2
  var DEFAULT_TIMEZONE, moment, timebase;

  moment = require('moment-timezone');

  DEFAULT_TIMEZONE = 'America/New_York';

  timebase = function(input, options = {}) {
    var date, defaults, k, v;
    if (typeof input === 'object') {
      options = input;
      input = void 0;
    }
    defaults = {
      startPoint: 'day',
      format: 'unixSeconds',
      timezone: DEFAULT_TIMEZONE
    };
    for (k in defaults) {
      v = defaults[k];
      if (options[k] == null) {
        options[k] = v;
      }
    }
    // handle input
    if (input === void 0) {
      date = moment().tz(options.timezone);
    } else if (typeof input === 'number') {
      date = moment.unix(input).tz(options.timezone);
    } else if (typeof input === 'string') {
      date = moment.tz(input, options.timezone);
    } else if (input instanceof Date) {
      date = moment(input).tz(options.timezone);
    } else if (typeof input === 'object' && !(input instanceof Date)) {
      options = input;
      date = moment().tz(options.timezone);
    } else {
      throw new Error('Invalid input type: ' + typeof input);
    }
    // adjust to start of period
    switch (options.startPoint) {
      case 'minute':
        date.startOf('minute');
        break;
      case 'hour':
        date.startOf('hour');
        break;
      case 'day':
        date.startOf('day');
        break;
      case 'month':
        date.startOf('month');
        break;
      case 'year':
        date.startOf('year');
        break;
      default:
        throw new Error('Invalid startPoint');
    }
    // format output
    switch (options.format) {
      case 'unixSeconds':
        return date.unix();
      case 'unixMilliseconds':
        return date.valueOf();
      case 'date':
        return date.toDate();
      default:
        throw new Error('Invalid format');
    }
  };

  timebase.DEFAULT_TIMEZONE = DEFAULT_TIMEZONE;

  //#
  module.exports = timebase;

  if (!module.parent) {
    console.log("Today usage one", timebase());
    console.log("Today usage two", timebase({
      timezone: 'UTC'
    }));
    // get the start of the current minute
    console.log("Minute", timebase({
      startPoint: 'minute'
    }));
    // get the start of the current hour
    console.log("Hour", timebase({
      startPoint: 'hour'
    }));
    // get the start of the current month
    console.log("Month", timebase({
      startPoint: 'month'
    }));
    // get the start of the current year
    console.log("Year", timebase({
      startPoint: 'year'
    }));
    console.log("Today, different format", timebase('2023-05-15T14:30:00Z'));
    // get the start of the month as a date object
    console.log("No param passed for time, return as date", timebase({
      startPoint: 'year',
      format: 'date'
    }));
  }

}).call(this);
